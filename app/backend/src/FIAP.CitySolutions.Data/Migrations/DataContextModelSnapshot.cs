// <auto-generated />
using System;
using FIAP.CitySolutions.Data.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FIAP.CitySolutions.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.Incident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("IncidentType")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ResponsibleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ResponsibleId");

                    b.HasIndex("UserId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.IncidentAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("IncidentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("IncidentAttachment");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.Responsible", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Responsibles");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.Incident", b =>
                {
                    b.HasOne("FIAP.CitySolutions.Domain.Domain.Responsible", "Responsible")
                        .WithMany("Incidents")
                        .HasForeignKey("ResponsibleId")
                        .IsRequired();

                    b.HasOne("FIAP.CitySolutions.Domain.Domain.User", "User")
                        .WithMany("Incidents")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Responsible");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.IncidentAttachment", b =>
                {
                    b.HasOne("FIAP.CitySolutions.Domain.Domain.Incident", "Incident")
                        .WithMany("Attachments")
                        .HasForeignKey("IncidentId")
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.Incident", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.Responsible", b =>
                {
                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("FIAP.CitySolutions.Domain.Domain.User", b =>
                {
                    b.Navigation("Incidents");
                });
#pragma warning restore 612, 618
        }
    }
}
